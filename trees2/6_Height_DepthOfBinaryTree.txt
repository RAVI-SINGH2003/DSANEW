Method 1 : Level order traversal 

tc : o(n) sc : o(n)
int height(struct Node *node)
{
    if (node == NULL)
        return 0;
    queue<struct Node *> q;
    q.push(node);
    q.push(NULL);
    int count = 0;
    while (!q.empty())
    {
        struct Node *temp = q.front();
        q.pop();
        if (temp == NULL)
        {
            count++;
            if (!q.empty())
                q.push(NULL);
        }
        else
        {
            if (temp->left)
                q.push(temp->left);
            if (temp->right)
                q.push(temp->right);
        }
    }
    return count;
}

TC : o(n) every node is traversed only once
SC : o(h) , height 
in worst case for skewed tree h=n , sc : o(n)
  
int height(struct Node* node){
      if(node==NULL) return 0;
      return 1 + max(height(node->left),height(node->right));
}