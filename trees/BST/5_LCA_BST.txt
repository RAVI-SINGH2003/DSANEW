//Love Babbar
TreeNode *LCAinaBST(TreeNode *root, TreeNode *P, TreeNode *Q)
{
   if(root==NULL) return NULL;
   if(root==P || root==Q) return root;
   int value = root->data;
   int p = P->data;
   int q = Q->data;
   if(p>value && q >value){
       return LCAinaBST(root->right, P, Q);
   }
   if(p<=value && q<=value){
       return LCAinaBST(root->left, P,Q);
   }
 
 // p>value && q<value || p<value && q>value ||p==value || q==value
  return root;
}
TreeNode *LCAinaBST(TreeNode *root, TreeNode *P, TreeNode *Q)
{
   TreeNode * curr = root,*ans = root;
   int p = P->data;
   int q = Q->data;
   while(curr!=NULL){
     int value = curr->data;
     if(value==p || value==q){
       return curr;
     }
     if(p>value && q >value){
       curr =curr->right;
     }
     else if(p<value && q<value){
      curr = curr->left;
     }
   }
   
  return root;
}