1. using inorder morris traversal
bool validateBST(BinaryTreeNode<int> *root) {
    BinaryTreeNode<int>* curr = root;
    int prevInorderVal = INT_MIN;
    while(curr!=NULL){
        if(curr->left==NULL){
            if(curr->data <prevInorderVal){
                return false;
            }
            prevInorderVal = curr->data;
            curr = curr->right;
        }
        else{
            BinaryTreeNode<int> *temp = curr->left;
            while(temp->right!=NULL && temp->right!=curr){
                temp = temp->right;
            }
            if(temp->right==NULL) 
            { 
                temp->right = curr;
                curr = curr ->left;
            }
            else{
                temp->right = NULL;
                if(curr->data <prevInorderVal){
                  return false;
                }
                prevInorderVal = curr->data;
                curr = curr->right;
            }

        }
       
    }
     return true;
}

2. using range method


bool solve(BinaryTreeNode<int> *root, int min , int max){
    if(root==NULL) return true;
    if(min <= root->data && root->data <=max){
       bool left = solve(root->left, min, root->data);
       bool right = solve(root->right , root->data,max);
       return left && right;
    }
    else{
        return false;
    }
}
bool validateBST(BinaryTreeNode<int> *root) {
    return solve(root, INT_MIN , INT_MAX);
}