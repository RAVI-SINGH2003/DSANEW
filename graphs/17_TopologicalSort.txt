//Topological Sort - Only valid for DAG

Linear ordering of vertices such that if there is an edge between u and v , u appears before v in that ordering.
5---->0<----4
|           |
*           *
2---->3----->1
5 4 2 3 1 0
4 5 2 3 1 0


Time Complexity: O(V + E).
Auxiliary Space: O(V).

#Approach = using dfs
void dfs(int node , vector<int> * & adj,stack<int>&st,int * vis){
    vis[node] = 1;
    for(int it : adj[node]){
        if(!vis[it]) dfs(it,adj,st,vis);
    }
    st.push(node);
}
vector<int> topoSort(int V, vector<int> adj[]) 
{
    int vis[V] = {0};
    stack<int> st;
    for(int node = 0; node < V; node ++){
        if(!vis[node]) dfs(node , adj , st , vis);
    }
    vector<int> ans;
    
    while(!st.empty()){
        ans.push_back(st.top());
        st.pop();
    }
    return ans;
}
