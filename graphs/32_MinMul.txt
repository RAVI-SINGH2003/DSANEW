int minimumMultiplications(vector<int>& arr, int start, int end) {
    if(start==end) return 0;
    const int N = 1e5;
    queue<pair<int,int>> q;
    q.push({0,start});
    vector<int> dis(N,1e9);
    dis[start] = 0;
    while(!q.empty()){
        int curr_num = q.front().second;
        int steps = q.front().first;
        q.pop();
        for(int i=0;i<arr.size();i++){
            int new_num = (curr_num * arr[i])%N;
            if(steps +  1 < dis[new_num]){
                if(new_num==end){
                    return steps + 1;
                }
                q.push({steps+1,new_num});
                dis[new_num] = steps + 1;
                
            }
        }
        
    }
    return -1;
}