FLoyd Warshall  
#It uses dp
# Multisource shortest countPath
# Helps in detecting negative cycles.
# Work on negative edges

#How to detect negative cycles with floyd warshall ?
-> If the cost[i][i] < 0 because in a negative weight cycle the
cost of reaching a node to itself become negative so
cost matrix will be storing negative cost for a node.

void shortest_distance(vector<vector<int>>&matrix){
    int n = matrix.size();
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(matrix[i][j]==-1) matrix[i][j] = 1e8;
            else if(i==j) matrix[i][j] = 0;
        }
    }
    for(int via = 0; via < n; via++){
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                matrix[i][j] = min(matrix[i][j],matrix[i][via] + matrix[via][j]);
            }
        }
    }

    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(matrix[i][j]==1e8) matrix[i][j] = -1;
        }
    }

    //detecting negative cycles
    bool isCycle = false;
    for(int i=0;i<n;i++){
      if(matrix[i][i]<0){
        isCycle = true;
        break;
      }
    }
    if(isCycle) cout << "yes";
    else cout << "no";
}

