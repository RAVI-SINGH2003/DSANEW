TC : N * wordLength * 26 (unordered_set)
TC : N* wordLength * 26 * logn (set)


int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
    unordered_set<string> sett(wordList.begin(),wordList.end());
    queue<pair<string , int >> q;
    q.push({beginWord,1});
    while(!q.empty()){
        string wprd = q.front().first;
        int tLen = q.front().second;
        q.pop();
        if(word==endWord){
            return tLen;
        }
        for(int i=0;i<word.length();i++){
            string newWord = word;
            for(char ch = 'a'; ch <='z';ch++){
                newWord[i] = ch;
                if(sett.count(newWord)){
                    q.push({newWord,tLen+1});
                    sett.erase(newWord);
                }
            }
        }
    }
    return 0;
}